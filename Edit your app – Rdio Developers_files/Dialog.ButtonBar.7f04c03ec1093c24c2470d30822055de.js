Bujagali.fxns["client/Components/Dialog/ButtonBar/ButtonBar.bg.html"]=function(){return function(ctx,args){var self=this;var done=function(post){var markup=self.markup;if(args&&args._blockProviders){args._blockProviders=null}self.done(post);ctx=null;args=null;self=null;done=function(){};return markup};function emit(more){Array.prototype.splice.apply(self.markup,[self.markup.length,more.length].concat(more))}ctx.each(function(button){emit(["\n  <button ",self.view.getDisabledAttr(button),' data-cid="',button.cid,'" class="',self.view.getButtonClassName(button),'">\n    ',R.Utils.value(button.get("label"),button),"\n  </button>\n"])});emit(["\n"]);return done()}}();R.StyleManager.loadComponentCss("Dialog.ButtonBar",".Dialog_ButtonBar{float:right;}.Dialog_ButtonBar button{margin-left:5px;}");!function($){R.Component.create("Dialog.ButtonBar",{modelClass:Backbone.Collection,events:{"click button":"onButtonClick"},initialize:function(options){this.superClass.prototype.initialize.apply(this,arguments);_.defaults(this.options,{closeButton:t("Close")});if(!this.model){this.model=new Backbone.Collection}if(this.options.closeButton){var close=this.model.get("closeButton");if(!close){close=new Backbone.Model({id:"closeButton"});this.model.add(close,{silent:true})}close.set({label:this.options.closeButton,callback:function(dialog){dialog.close()}},{silent:true})}this.listen(this.model,"all",this.onChange)},getButtonClassName:function(button){var className=["button"];if(button.has("className")){className.push(R.Utils.value(button.get("className"),button))}return className.join(" ")},getDisabledAttr:function(button){if(button.has("disabled")&&R.Utils.value(button.get("disabled"),button)){return"disabled"}return""},onChange:function(){this.render()},onButtonClick:function(e){var button=this.model.get($(e.target).data("cid"));this.bubbleEvent("buttonClicked",e,button)}})}(R.$);
//# sourceMappingURL=/media/client/orig/Components/Dialog.ButtonBar.7f04c03ec1093c24c2470d30822055de.js.map